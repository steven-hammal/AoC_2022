#!markdown

# Advent of Code Day 4: Overlapping Sections


*Brief overview of the challenge.  A useful way to clarify the requirements before starting to code*

#!markdown

## Solution Functions

#!csharp

using System.IO;

// Create a utils class to avoid having to duplicate this every day
public List<string> GetSectionPairsFromFile(string filename)
{
    return File.ReadLines(filename).ToList();
}

public class SectionPair
{
    public IEnumerable<int> SectionOne {get; set; }
    public IEnumerable<int> SectionTwo {get; set; }

    public SectionPair(List<List<int>> sectionsList)
    {
        SectionOne = sectionsList.First();
        SectionTwo = sectionsList.Last();
    }
}

public int CountTotalOverlapsIn(List<string> sectionPairs)
{
    return sectionPairs.Where(s => ContainsTotalOverlap(GetSectionPairFrom(s))).Count();
}

public SectionPair GetSectionPairFrom(string line)
{
    var sections = line.Split(",");
    var sectionRanges = sections.Select(section => section.Split("-"));

    return new SectionPair(sectionRanges.Select(rangeStrings => Enumerable.Range(Int16.Parse(rangeStrings[0]), (Int16.Parse(rangeStrings[1]) - Int16.Parse(rangeStrings[0]) + 1)).ToList()).ToList());
}

public bool ContainsTotalOverlap(SectionPair sectionPair)
{
    var intersection = GetIntersectionOf(sectionPair);   

    return (!sectionPair.SectionOne.Except(intersection).Any()) || (!sectionPair.SectionTwo.Except(intersection).Any());
}

public List<int> GetIntersectionOf(SectionPair sectionPair)
{
    // sectionPair.SectionOne.ToList().ForEach(i => Console.Write(i));
    // Console.WriteLine();
    // sectionPair.SectionTwo.ToList().ForEach(i => Console.Write(i));
    // Console.WriteLine();

    var x = sectionPair.SectionOne.Intersect(sectionPair.SectionTwo).ToList();
    
    // x.ForEach(i => Console.Write(i));
    // Console.WriteLine();
    // Console.WriteLine();

    return sectionPair.SectionOne.Intersect(sectionPair.SectionTwo).ToList();
}

#!markdown

## Part 1 Test Cases

#!csharp

var testInput1 = new List<string> { "2-4,6-8", "2-3,4-5", "5-7,7-9", "2-8,3-7", "6-6,4-6", "2-6,4-8" };
var testResult1 = CountTotalOverlapsIn(testInput1);

Console.WriteLine(testResult1 == 2);

#!markdown

## Part 1 Answer

#!csharp

var sectionPairStrings = GetSectionPairsFromFile("day_4_input.txt");
var answer = CountTotalOverlapsIn(sectionPairStrings);

Console.WriteLine(answer);

#!markdown

## Part 2 Test Cases

#!markdown

## Part 2 Answer
